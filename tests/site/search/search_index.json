{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the baguette-script documentation","text":"<p>Baguette-script is a new programming language. It's a _hyperscript brother, the first version was a clone of the version 0.9.8 of _hyperscript.</p> <p>The core principles are same so for all aspects not present in this documentation, check out _hyperscript's.</p> <p>Baguette-script provides a better ecosystem for plugins than _hyperscript.</p>"},{"location":"plugins/","title":"Plugins","text":""},{"location":"plugins/#build-in-plugins","title":"build-in plugins","text":"<ul> <li>worker : from -&gt; _hyperscript workers</li> <li>frenchGrammarPack : add translated WebGrammar commands.</li> </ul>"},{"location":"plugins/#coming-soon","title":"Coming soon","text":"<ul> <li>other languages grammar packs :</li> <li>es</li> <li>pt</li> <li>de</li> <li>implementation of other _hyperscript plugins</li> </ul>"},{"location":"plugins/dev/","title":"Plugin development","text":"<p>There is the basic code base for a plugin.</p> <pre><code>///=========================================================================\n/// Plugin information (author, date, description, version, etc...)\n///=========================================================================\n\n'use strict';\n\n(function (self, factory) {\n    const plugin = factory(self);\n\n    if (typeof exports === 'object' &amp;&amp; typeof exports['nodeName'] !== 'string') {\n        module.exports = plugin\n    } else {\n        if ('baguetteScript' in self) self.baguetteScript.use(plugin)\n    }\n})(typeof self !== 'undefined' ? self : this, self =&gt; {\n    return (baguetteScript) =&gt; {\n       // here put your commands/features/etc...\n    }\n})\n</code></pre>"},{"location":"plugins/installation/","title":"How to install plugins","text":"<p>After the <code>&lt;script&gt;</code> tag that imports baguette-script on the page, put the <code>&lt;script&gt;</code> that includes your plugin.</p> <p>You can create your customs plugins, more informations on the next page.</p>"}]}